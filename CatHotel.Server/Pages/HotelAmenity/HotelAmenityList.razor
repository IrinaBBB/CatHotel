@page "/hotel-amenity"

@inject IAmenityRepository AmenityRepository
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@attribute [Authorize]

<div class="d-flex align-items-center justify-content-between">
    <h1 class="h3">Hotel Amenities</h1>
    <a href="/hotel-amenity/create" class="d-flex align-items-center text-decoration-none">
        <span class="oi oi-plus me-2" aria-hidden="true"></span><span>Create new hotel amenity</span>
    </a>
</div>
<table class="table table-hover">
    <thead>
    <tr class="table-primary">
        <th scope="col">Name</th>
        <th scope="col">Description</th>
        <th scope="col">Icon</th>
        <th>&nbsp;</th>
    </tr>
    </thead>
    <tbody>
        @if (HotelAmenities.Any())
    {
            @foreach (var amenity in HotelAmenities)
        {
            <tr>
                <th scope="row">@amenity.Name</th>
                <td>@amenity.Description</td>
                <td>
                    <img src="@amenity.IconStyle" style="width: 100px"/>
                </td>
                <td>
                    <button type="button" class="btn btn-primary">
                        <span class="oi oi-info" aria-hidden="true"></span>
                    </button>
                    <NavLink href="@($"hotel-amenity/edit/{amenity.Id}")" class="btn btn-warning">
                        <span class="oi oi-pencil" aria-hidden="true"></span>
                    </NavLink>
                    <button type="button" class="btn btn-danger" >
                        <span class="oi oi-trash" aria-hidden="true"></span>
                    </button>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="5">No records found</td>
        </tr>
    }

    </tbody>
</table>


@code {
    internal IEnumerable<HotelAmenityDto> HotelAmenities { get; set; } = new List<HotelAmenityDto>();
    internal int? DeleteAmenityId { get; set; } = null;
    private bool IsProcessing { get; set; } = false;


    protected override async Task OnInitializedAsync()
    {
        HotelAmenities = await AmenityRepository.GetAllHotelAmenity();
    }
}
