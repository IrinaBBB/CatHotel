@page "/hotel-room" 
@using CatHotel.Server.Helpers

@inject IHotelRoomRepository _hotelRoomRepository
@inject IJSRuntime JsRuntime
@inject IFileUpload FileUpload
@inject IHotelRoomRepository HotelRoomRepository
@attribute [Authorize]

<div class="d-flex align-items-center justify-content-between">
    <h1 class="h3">Hotel Rooms</h1>
    <a href="/hotel-room/create" class="d-flex align-items-center text-decoration-none">
        <span class="oi oi-plus me-2" aria-hidden="true"></span><span>Create new hotel room</span>
    </a>
</div>

<table class="table table-hover">
    <thead>
    <tr class="table-primary">
        <th scope="col">Name</th>
        <th scope="col">Occupancy</th>
        <th scope="col">Rate</th>
        <th scope="col">Sq M</th>
        <th>&nbsp;</th>
    </tr>
    </thead>
    <tbody>
    @if (HotelRooms.Any())
    {
        @foreach (var room in HotelRooms)
        {
            <tr>
                <th scope="row">@room.Name</th>
                <td>@room.Occupancy</td>
                <td>@room.RegularRate.ToString("c")</td>
                <td>@room.SqM</td>
                <td>
                    <button type="button" class="btn btn-primary">
                        <span class="oi oi-info" aria-hidden="true"></span>
                    </button>
                    <NavLink href="@($"hotel-room/edit/{room.Id}")" class="btn btn-warning">
                        <span class="oi oi-pencil" aria-hidden="true"></span>
                    </NavLink>
                    <button type="button" class="btn btn-danger" @onclick="()=>HandleDelete(room.Id)">
                        <span class="oi oi-trash" aria-hidden="true"></span>
                    </button>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="5">No records found</td>
        </tr>
    }

    </tbody>
</table>

<DeleteConfirmation IsParentComponentProcessing="IsProcessing" ConfirmationChanged="ConfirmDelete_Click"></DeleteConfirmation>

<script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity = "sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin = "anonymous" ></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct" crossorigin="anonymous"></script>

@code {
    private IEnumerable<HotelRoomDto> HotelRooms { get; set; } = new List<HotelRoomDto>();
    private int? DeleteRoomId { get; set; } = null;
    private bool IsProcessing { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        HotelRooms = await _hotelRoomRepository.GetAllHotelRooms();
    }

    private async Task HandleDelete(int roomId)
    {
        DeleteRoomId = roomId;
        await JsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    public async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        if (isConfirmed && DeleteRoomId != null)
        {
            var hotelRoom = await HotelRoomRepository.GetHotelRoom(DeleteRoomId.Value);
            foreach (var image in hotelRoom.HotelRoomImages)
            {
                var imageName = image.RoomImageUrl.Replace($"RoomImages/", "");
                FileUpload.DeleteFile(imageName);
            }

            await HotelRoomRepository.DeleteHotelRoom(DeleteRoomId.Value);
            await JsRuntime.ToastrSuccess("Hotel Room Deleted successfully");
            HotelRooms = await HotelRoomRepository.GetAllHotelRooms();
        }
        await JsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
        IsProcessing = false;
    }

}